version: '3.8'

networks:
  znnd-net:
    driver: bridge

volumes:
  prometheus_data: {}
  grafana_data: {}
  znnd_data: {}
  caddy_data: {}
  caddy_config: {}

services:
 
  prometheus:
    image: prom/prometheus:v2.40.1
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    expose:
      - 9090
    networks:
      - znnd-net
    labels:
      org.label-schema.group: "monitoring"

  alertmanager:
    image: prom/alertmanager:v0.24.0
    container_name: alertmanager
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    expose:
      - 9093
    networks:
      - znnd-net
    labels:
      org.label-schema.group: "monitoring"

  nodeexporter:
    image: prom/node-exporter:v1.4.0
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - znnd-net
    labels:
      org.label-schema.group: "monitoring"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.46.0
    container_name: cadvisor
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      #- /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    restart: unless-stopped
    expose:
      - 8080
    networks:
      - znnd-net
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana:9.2.4
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=marcusolsson-json-datasource
    restart: unless-stopped
    expose:
      - 3000
    networks:
      - znnd-net
    labels:
      org.label-schema.group: "monitoring"

  pushgateway:
    image: prom/pushgateway:v1.4.3
    container_name: pushgateway
    restart: unless-stopped
    expose:
      - 9091
    networks:
      - znnd-net
    labels:
      org.label-schema.group: "monitoring"

  caddy:
    image: caddy:2.6.2
    container_name: caddy
    ports:
      - "80:80"
      - "443:443"
      - "3000:3000"
      - "35997:35997"
      - "35998:35998"
      - "8000:8000"
      - "8080:8080"
      - "9090:9090"
      - "9093:9093"
      - "9091:9091"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
      - ./site:/srv # Not necessary for this configuration
    environment:
      - ADMIN_USER=${ADMIN_USER:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - ADMIN_PASSWORD_HASH=${ADMIN_PASSWORD_HASH:-$2a$14$1l.IozJx7xQRVmlkEQ32OeEEfP5mRxTpbDTCTcXRqn19gXD8YK1pO}
      - DOMAIN=${DOMAIN:-example.com} #Change the domain name
      - PUBLIC_IP=${PUBLIC_IP:-1.1.1.1} #Change the public IP Address of the node

    restart: unless-stopped
    networks:
      - znnd-net
    labels:
      org.label-schema.group: "monitoring"

  znnd:
    build: .
    container_name: znnd
    ports:
      - 35995:35995
      - 35995:35995/udp
    volumes:
      - znnd_data:/root/.znn
    restart: unless-stopped
    networks:
      - znnd-net
    labels:
      org.label-schema.group: "monitoring"

  monit-docker:
    image: decryptus/monit-docker:latest
    container_name: monit-docker
    environment:
      MONIT_DOCKER_CRONS: |
        */2 * * * * monit-docker --name 'znnd' monit --cmd-if 'mem_percent > 85 ? restart'
        */2 * * * * monit-docker monit --cmd-if 'status not in (pause,running) ? restart'
        */2 * * * * monit-docker monit --rsc pid
    volumes:
      - /var/run:/var/run:rw
    restart: unless-stopped
    networks:
      - znnd-net
    labels:
      org.label-schema.group: "monitoring"

  # node-ips:
  #   build:
  #     context: .
  #     dockerfile: node-ips/Dockerfile
  #   container_name: node-ips
  #   restart: unless-stopped
  #   networks:
  #     - znnd-net
  #   labels:
  #     org.label-schema.group: "monitoring"

  # Remove loki until it works correctly https://github.com/grafana/loki/issues/2361
  # loki:
  #   image: grafana/loki:2.6.1
  #   container_name: loki
  #   volumes:
  #     - ./loki:/etc/loki
  #   ports:
  #     - "3100:3100"
  #   restart: unless-stopped
  #   command: -config.file=/etc/loki/loki.yml
  #   networks:
  #     - znnd-net
  #   expose:
  #     - 3100
  #   labels:
  #     org.label-schema.group: "monitoring"

  # promtail:
  #   image: grafana/promtail:2.6.1
  #   container_name: promtail
  #   volumes:
  #     - /var/log:/var/log
  #     - ./promtail:/etc/promtail
  #   #ports:
  #   #- "1514:1514" # this is only needed if you are going to send syslogs
  #   restart: unless-stopped
  #   command: -config.file=/etc/promtail/promtail.yml
  #   networks:
  #     - znnd-net  
  #   labels:
  #     org.label-schema.group: "monitoring"